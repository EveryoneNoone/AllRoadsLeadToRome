version: '3.4'

services:
  notificationserviceapi:
    image: notificationservice/webapi
    build:
      context: .
      dockerfile: src/services/notification/NotificationServiceAPI/Dockerfile
    ports:
      - "8089:8080"
    depends_on: 
      - rabbit
      - mongo

  mongo:
    image: mongo:latest
    restart: always
    container_name: mongo-container
    command: mongod --auth --bind_ip_all
    environment:
      MONGO_INITDB_DATABASE: NotificationStore
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb-data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
  
  rabbit:
    image: rabbitmq:3-management
    restart: always
    hostname: rabbitmqhost    
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
 
  authservice_db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  authservice_webapi:
    image: auth/webapi
    build:
      context: .
      dockerfile: src/services/auth/webapi/Dockerfile
    ports:
      - "8090:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultPostgresConnection=Host=authservice_db;Port=5432;Database=postgres;Username=postgres;Password=123456
    depends_on:
      - authservice_db

  orderservice_db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: orderdb
    ports:
      - "5434:5432"
    volumes:
      - orders_postgres_data:/var/lib/postgresql/data 
 
  # orderservice_webapi:
  #   image: order/webapi
  #   build:
  #     context: .
  #     dockerfile: src/services/order/WebApi/Dockerfile
  #   ports:
  #     - "8088:8080"
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Production
  #     - ConnectionStrings__OrderDB=Host=orderservice_db;Port=5432;Database=orderdb;Username=postgres;Password=123456
  #     - RabbitMQ__Host=rabbitmqhost
  #     - RabbitMQ__Username=guest
  #     - RabbitMQ__Password=guest
  #   depends_on:
  #     - orderservice_db
  #     - rabbit
      
  orderservice_webapi:
    image: order/webapi
    build:
      context: .
      dockerfile: src/services/order/WebApi/Dockerfile
    ports:
      - "8088:8080"
    depends_on:
      - orderservice_db
      - rabbit

volumes:
  mongodb-data:
    driver: local  
  postgres_data:
  rabbitmq_data:
  orders_postgres_data:

